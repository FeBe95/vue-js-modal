"use strict";(self.webpackChunk_febe95_vue_js_modal=self.webpackChunk_febe95_vue_js_modal||[]).push([[848],{311:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>l});var e=a(641);const p={},t=(0,a(262).A)(p,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h1><p>The library supports 2 types of modals - static and dynamic.</p><ul><li><strong>Static</strong> are defined explicitly though the template.</li><li><strong>Dynamic</strong> are generated based on the configuration passed into the &quot;show modal&quot; function.</li></ul><h2 id="static-modals" tabindex="-1"><a class="header-anchor" href="#static-modals"><span>Static modals</span></a></h2><p>Modals are defined by simply using the <code>&lt;modal /&gt;</code> component. To control it&#39;s visibility - use <code>$modal.show</code> / <code>$modal.hide</code> functions, for example:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>\n<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modal</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>my-first-modal<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>\n<span class="line">        This is my first modal</span>\n<span class="line highlighted">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modal</span><span class="token punctuation">&gt;</span></span></span>\n<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>\n<span class="line"></span>\n<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;MyComponent&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">show</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line highlighted">            <span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;my-first-modal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token function">hide</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line highlighted">            <span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">&#39;my-first-modal&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dynamic-modals" tabindex="-1"><a class="header-anchor" href="#dynamic-modals"><span>Dynamic modals</span></a></h2><p>In order to instantiate modals at runtime (for lazy-loading or de-cluttering templates), it is possible to create modals dynamically.</p><p>To show dynamic modal you can use the same <code>$modal.show</code> function with extended API:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span></span>\n<span class="line">  component<span class="token punctuation">,</span></span>\n<span class="line">  component_properties<span class="token punctuation">,</span></span>\n<span class="line">  modal_properties<span class="token punctuation">,</span></span>\n<span class="line">  modal_events</span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>component</code> - inline or imported Vue component definition</li><li><code>component_properties</code> - any properties that are used within the <code>component_definition</code></li><li><code>modal_properties</code> -modal component properties (see Properties section)</li><li><code>modal_events</code> - modal event handlers (see Events section)</li></ul><p>Using <strong>imported</strong> component definition:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> MyComponent <span class="token keyword">from</span> <span class="token string">&#39;./MyComponent.vue&#39;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token operator">...</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span></span>\n<span class="line">  MyComponent<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;This text is passed as a property&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>Using <strong>inline</strong> component definition:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>\n<span class="line">      &lt;div&gt;</span>\n<span class="line">        &lt;h1&gt;This is created inline&lt;/h1&gt;</span>\n<span class="line">        &lt;p&gt;{{ text }}&lt;/p&gt;</span>\n<span class="line">      &lt;/div&gt;</span>\n<span class="line">    </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">]</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;This text is passed as a property&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">{</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">{</span> <span class="token string-property property">&#39;before-close&#39;</span><span class="token operator">:</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Other than defining the <code>name</code> modal parameter, it&#39;s also possible to close dynamic modals by emitting <code>&#39;close&#39;</code> event:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>\n<span class="line">    &lt;div&gt;</span>\n<span class="line">      &lt;p&gt;Close using this button:&lt;/p&gt;</span>\n<span class="line highlighted">      &lt;button @click=&quot;$emit(&#39;close&#39;)&quot;&gt;Close&lt;/button&gt;</span>\n<span class="line">    &lt;/div&gt;</span>\n<span class="line">  </span><span class="token template-punctuation string">`</span></span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is possible to set default property values for dynamic modals:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> VModal <span class="token keyword">from</span> <span class="token string">&#39;@febe95/vue-js-modal&#39;</span></span>\n<span class="line"></span>\n<span class="line">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VModal<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line highlighted">  <span class="token literal-property property">dynamicDefaults</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line highlighted">    <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line highlighted">    <span class="token literal-property property">resizable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line highlighted">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span></span>\n<span class="line highlighted">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dialogs" tabindex="-1"><a class="header-anchor" href="#dialogs"><span>Dialogs</span></a></h2><p>Dialog is a simplified version of the modal which has most parameters set by default and is useful for quick prototyping, alerts, etc. Dialog is merely an example of how easy it is to create modals that fit your project needs. Nevertheless, you can use it if you set <code>dialog: true</code> in plugin configuration:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VModal<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">dialog</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And include this component in your project:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v-dialog</span> <span class="token punctuation">/&gt;</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>To show modal follow this example (all params except of “text” are optional):</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&#39;dialog&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;The standard Lorem Ipsum passage&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;Lorem ipsum dolor sit amet, ...&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">buttons</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Cancel&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>$modal<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">&#39;dialog&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Like&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Like action&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Repost&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Repost action&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that the name should be <code>&#39;dialog&#39;</code>!</p><p><img src="https://user-images.githubusercontent.com/1577802/85934434-0dac5300-b8da-11ea-9db5-34fa5a0b7fe0.png" alt=""></p>',29)]))}]]),l=JSON.parse('{"path":"/Intro.html","title":"Introduction","lang":"en-US","frontmatter":{},"git":{"updatedTime":1748015373000,"contributors":[{"name":"Yev","username":"Yev","email":"yev.dev@gmail.com","commits":2,"url":"https://github.com/Yev"},{"name":"Shaya Ulman","username":"","email":"shayaulman@gmail.com","commits":1},{"name":"Kees de Kooter","username":"","email":"kees@boplicity.nl","commits":1},{"name":"Felix Bernhard","username":"","email":"mail@felix-bernhard.com","commits":1}],"changelog":[{"hash":"15288f91dbf4efca016718885c173fda3bdc82aa","time":1748015373000,"email":"mail@felix-bernhard.com","author":"Felix Bernhard","message":"(docs) migrate docs"},{"hash":"2682950e4f9ad37b50d0c4bff0a009856df0be9a","time":1600164473000,"email":"kees@boplicity.nl","author":"Kees de Kooter","message":"Update Intro.md (#622)"},{"hash":"c14ff9f1f796de9cc32eaf9104fdc1a079a87639","time":1596552301000,"email":"shayaulman@gmail.com","author":"Shaya Ulman","message":"fix: code typo in intro.md"},{"hash":"1f388150efccf830af24bf07161647c3cc4467d8","time":1594210198000,"email":"yev.dev@gmail.com","author":"Yev","message":"Minor tweaks to documentation site"},{"hash":"d69c81c5f9d344bfbaa8ceda3c777b05d42098af","time":1593339403000,"email":"yev.dev@gmail.com","author":"Yev","message":"Updated documentation"}]},"filePathRelative":"Intro.md"}')}}]);